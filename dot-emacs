;; Packages
(setq package-archives
      '(("ELPA" . "http://tromey.com/elpa/")
        ("gnu" . "http://elpa.gnu.org/packages/")
        ("marmalade" . "http://marmalade-repo.org/packages/")))
(package-initialize)

;; Better iswitchb-mode
(ido-mode 1)
(setq ido-enable-flex-matching t)

;; Editing stuff
(cua-mode 0)
(transient-mark-mode 1)

;; Auto-revert
(global-auto-revert-mode)

;; Whitespace
(setq whitespace-style '(face tabs trailing lines-tail))

;; Focus follows mouse
(setq focus-follows-mouse 1)
(setq mouse-autoselect-window 't)

;; Theme
(load-theme 'wheatgrass)

;; Bigger fonts
(set-face-attribute 'default nil :height 130)
(set-default-font "Ubuntu Mono")

;; Hide tool, menu, and scroll bars
(tool-bar-mode 0)
(menu-bar-mode 0)
(scroll-bar-mode 0)

;; Auto-complete mode
(require 'auto-complete-config)
(ac-config-default)

;; C-Style
(setq c-basic-offset 4)
(setq c-basic-indent 4)
(setq c-default-style "linux")

;; No more tabs!
(setq tab-width 2)
(setq-default indent-tabs-mode nil)

;; No more trailing whitespace!
(setq-default show-trailing-whitespace 't)

;; Trailing whitespace in term-mode!
(add-hook 'term-mode-hook (lambda ()
                            (setq show-trailing-whitespace 'nil)))

;; Don't litter backups everywhere
(setq
 backup-by-copying t      ; don't clobber symlinks
 backup-directory-alist
 '(("." . "~/.saves"))    ; don't litter my fs tree
 delete-old-versions t
 kept-new-versions 6
 kept-old-versions 2
 version-control t)

;; Saveplace
(setq save-place-file "~/.emacs.d/saveplace")
(setq-default save-place t)
(require 'saveplace)

;; Parentheses
(require 'highlight-parentheses)
(add-hook 'prog-mode-hook 'highlight-parentheses-mode)
(show-paren-mode 't)
(setq blink-matching-paren 't)

;; Compilation
(setq compilation-scroll-output 't)
(global-set-key (kbd "C-c C-d C-c")
                (lambda ()
                  (interactive)
                  (if (functionp 'recompile)
                      (recompile)
                    (compile "make"))))

;; Erlang
(require 'erlang)
(add-to-list 'auto-mode-alist '("\\.erl$" . erlang-mode))

;; Haskell
(add-to-list 'auto-mode-alist '("\\.hs$" . haskell-mode))
(add-hook 'haskell-mode-hook 'turn-on-haskell-doc-mode)
(add-hook 'haskell-mode-hook 'turn-on-haskell-indent)
(add-hook 'haskell-mode-hook 'auto-complete-mode)

;; Eshell
(require 'eshell)
(global-set-key (kbd "C-$") (lambda ()
                              (interactive)
                              (eshell 't)))
(add-hook 'eshell-mode-hook (lambda ()
                              (setq show-trailing-whitespace 'nil)))
(eshell/export "EDITOR=emacsclient")
(eshell/export "OCAMLRUNPARAM=b")

;; Debugging
(setq debug-on-error 't)

;; Markdown
(add-to-list 'auto-mode-alist '("\\.md$" . markdown-mode))
(add-hook 'markdown-mode-hook 'flyspell-mode)

;; Page-up/down
(global-set-key (kbd "M-n") 'scroll-up-command)
(global-set-key (kbd "M-p") 'scroll-down-command)

;; Follow tags with cscope
(global-set-key (kbd "M-.") 'cscope-find-this-symbol)

;; Comments
(global-set-key (kbd "C-c c") 'comment-dwim)

;; Mu
(let ((default-directory "/usr/local/share/emacs/site-lisp"))
  (normal-top-level-add-subdirs-to-load-path))
(require 'mu4e)
(setq mu4e-maildir "/src/mail")
(setq mu4e-sent-messages-behavior 'delete)
(setq mu4e-maildir-shortcuts
      '( ("/gmail/INBOX"           . ?g)
         ("/imperial/INBOX"        . ?i)))
(setq mu4e-get-mail-command "offlineimap")
(setq
 user-mail-address "scvalex@gmail.com"
 user-full-name  "Alexandru Scvortov")
(require 'smtpmail)
(setq message-send-mail-function 'smtpmail-send-it
      smtpmail-stream-type 'starttls
      smtpmail-default-smtp-server "smtp.gmail.com"
      smtpmail-smtp-server "smtp.gmail.com"
      smtpmail-smtp-service 587)
(setq message-kill-buffer-on-exit t)
(setq mu4e-headers-date-format "%Y-%m-%d %a %R")
(setq mu4e-view-show-addresses t)
(setq mu4e-update-interval 180)
(setq mail-user-agent 'mu4e-user-agent)
(setq mu4e-user-mail-address-regexp "scvalex@gmail\.com\\|as10109@doc\.ic\.ac\.uk")
(setq mu4e-compose-keep-self-cc t)
(add-hook 'mu4e-compose-mode-hook
          (defun add-bcc ()
            (message-add-header "Cc: scvalex@gmail.com\n")))
(add-hook 'mu4e-view-mode-hook
          (lambda ()
            (local-set-key (kbd ",") 'mu4e~view-quit-buffer)
            (setq show-trailing-whitespace nil)))
(add-hook 'mu4e-headers-mode-hook
          (lambda ()
            (setq show-trailing-whitespace nil)))
(add-hook 'mu4e-compose-mode-hook 'flyspell-mode)
(setq mu4e-html2text-command "html2text -utf8 -width 120 -nobs")

;; Underscores are word separators
;; FIXME This needs to be added to the relevant mode hooks.
;; (modify-syntax-entry ?_ "-")
